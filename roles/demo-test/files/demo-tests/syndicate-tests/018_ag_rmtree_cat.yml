---
# Acquisition Gateway read test
# Description: Create an AG that initializes with 3 files as it's data set, create a UG to cat the data, and confirm accuracy

- name: setup_ag_rmtree_cat
  type: setup
  tmpdirs:
    - name: 018_ag_rmtree_cat
      varname: config_dir
  randnames:
    - test_volume
    - test_ag
    - cat_ug
  vars:
    - name: syndicate_conf
      value: $config_dir/syndicate.conf
    - name: ag_driver
      value: $SYNDICATE_PYTHON_ROOT/syndicate/ag/drivers/disk
    - name: ag_path
      value: $SYNDICATE_AG_ROOT/syndicate-ag
    - name: ls_path
      value: $SYNDICATE_UG_ROOT/syndicate-ls
    - name: cat_path
      value: $SYNDICATE_UG_ROOT/syndicate-cat
    - name: refresh_path
      value: $SYNDICATE_UG_ROOT/syndicate-refresh
  debug: off

- name: create ag dataset
  type: sequential
  tasks:
    - name: make an AG dataset area/path #the path is defined by the AG, e.g. /tmp/syndicate-AG-dataset
      command: $tasksf_dir/mkagdataset.py $ag_driver --no-secrets None #mkagdataset.py <driver path> <--secrets|--no-secrets> <gateway privkey pem>

- name: create path and file
  type: sequential
  tasks:
    - name: make to_remove1/to_remove2/to_remove3 path
      command: mkdir -p /tmp/syndicate-AG-dataset/to_remove1/to_remove2/to_remove3

    - name: make random file in the AG dataset path
      command: $tasksf_dir/mkrandfile.py /tmp/syndicate-AG-dataset/to_remove1/to_remove2/to_remove3/local_file1 16384

- name: config
  type: sequential
  tasks:
    - name: setup security config
      command: $SYNDICATE_TOOL --trust_public_key -c "$syndicate_conf" --debug setup "$SYNDICATE_ADMIN" "$SYNDICATE_PRIVKEY_PATH" "$SYNDICATE_MS"

    - name: add test volume config
      command: $SYNDICATE_TOOL -c "$syndicate_conf" create_volume name=$test_volume description="test volume" blocksize=4096 email=$SYNDICATE_ADMIN

    - name: create AG config
      command: $SYNDICATE_TOOL -c "$syndicate_conf" create_gateway name=$test_ag type=AG volume=$test_volume email=$SYNDICATE_ADMIN private_key=auto port=31111

    - name: update AG config
      command: $SYNDICATE_TOOL -c "$syndicate_conf" update_gateway name=$test_ag caps=ALL port=31112 driver=$ag_driver

- name: setup UGs
  type: sequential
  tasks:
    - name: create cat UG config
      command: $SYNDICATE_TOOL -c "$syndicate_conf" create_gateway name=$cat_ug type=UG volume=$test_volume email=$SYNDICATE_ADMIN private_key=auto port=31111

    - name: update cat UG config
      command: $SYNDICATE_TOOL -c "$syndicate_conf" update_gateway name=$cat_ug caps=ALL

- name: daemon AG
  type: daemon
  tasks:
    - name: start AG
      command: $ag_path -c "$syndicate_conf" -d2 -f -u $SYNDICATE_ADMIN -v $test_volume -g $test_ag
      sleep: 10
      exit: 0

- name: delete path and file
  type: sequential
  tasks:
    - name: recursively remove to_remove1
      command: rm -rf /tmp/syndicate-AG-dataset/to_remove1

- name: refresh dataset
  type: sequential
  tasks:
    - name: refresh dataset 
      command: $refresh_path -d2 -f -c "$syndicate_conf" -u $SYNDICATE_ADMIN -v $test_volume -g $cat_ug /to_remove1
      sleep: 10

- name: run ag cat test
  type: sequential
  tasks:
    - name: test cat
      command: $cat_path -d2 -f -c "$syndicate_conf" -u $SYNDICATE_ADMIN -v $test_volume -g $cat_ug /to_remove1/to_remove2/to_remove3/local_file
      exit: 1
      containserr: "Failed to open /to_remove1/to_remove2/to_remove3/local_file: No such file or directory" 

- name: run ls test after cat test
  type: sequential
  tasks:
    - name: test ls
      command: $ls_path -d2 -f -c "$syndicate_conf" -u $SYNDICATE_ADMIN -v $test_volume -g $cat_ug /to_remove1
      containserr: "Failed to stat '/to_remove1': No such file or directory"
