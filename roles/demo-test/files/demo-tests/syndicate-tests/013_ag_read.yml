---
# Acquisition Gateway read test
# Description: Create an AG that initializes with 3 files as it's data set, create a UG to read the data, and confirm accuracy

- name: setup_ag_read
  type: setup
  tmpdirs:
    - name: 013_ag_read
      varname: config_dir
  randnames:
    - test_volume
    - test_ag
    - read_ug
  seqloop:              # list from of ints from 0
    - name: cacheloop
      quantity: 2
  valueloop:            # list/dict with the name(s) and value(s) defined below
    - name: test_ranges
      values:
        - start: 1
          stop: 199     # 1 to 200
        - start: 0
          stop: 4096    # 1 block, aligned
        - start: 0
          stop: 8192    # 2 blocks, aligned
        - start: 0
          stop: 1000    # 1 block, tail unaligned
        - start: 0
          stop: 6000    # 2 blocks, tail unaligned
        - start: 100
          stop: 3900    # 4000 - 100,   1 block, head unaligned
        - start: 5000
          stop: 5000    # 10000 - 5000, 2 blocks, head and tail unaligned
        - start: 4096
          stop: 5904    # 10000 - 4096, 2 blocks, tail unaligned
        - start: 5000
          stop: 3192    # 8192 - 5000,  2 blocks, head unalighed
        - start: 4096
          stop: 12738   # 16834 - 4096, 3 blocks, aligned
        - start: 5000
          stop: 11384   # 16384 - 5000, 3 blocks, head unaligned
        - start: 4096
          stop: 11904   # 16000 - 4096, 3 blocks, tail unaligned
        - start: 5000
          stop: 11000   # 16000 - 5000, 3 blocks, head and tail unaligned
  vars:
    - name: local_file
      value: /tmp/syndicate-AG-dataset/local_file
    - name: syndicate_conf
      value: $config_dir/syndicate.conf
    - name: ag_driver
      value: $SYNDICATE_PYTHON_ROOT/syndicate/ag/drivers/disk
    - name: ag_path
      value: $SYNDICATE_AG_ROOT/syndicate-ag
    - name: read_path
      value: $SYNDICATE_UG_ROOT/syndicate-read
  debug: verbose

- name: create ag dataset
  type: sequential
  tasks:
    - name: make an AG dataset area/path #the path is defined by the AG, e.g. /tmp/syndicate-AG-dataset
      command: $tasksf_dir/mkagdataset.py $ag_driver --no-secrets None #mkagdataset.py <driver path> <--secrets|--no-secrets> <gateway privkey pem>

- name: config
  type: sequential
  tasks:
    - name: make random local_file
      command: $tasksf_dir/mkrandfile.py $local_file 16384

    - name: setup security config
      command: $SYNDICATE_TOOL --trust_public_key -c "$syndicate_conf" --debug setup "$SYNDICATE_ADMIN" "$SYNDICATE_PRIVKEY_PATH" "$SYNDICATE_MS"

    - name: add test volume config
      command: $SYNDICATE_TOOL -c "$syndicate_conf" create_volume name=$test_volume description="test volume" blocksize=4096 email=$SYNDICATE_ADMIN

    - name: create AG config
      command: $SYNDICATE_TOOL -c "$syndicate_conf" create_gateway name=$test_ag type=AG volume=$test_volume email=$SYNDICATE_ADMIN private_key=auto port=31111

    - name: update AG config
      command: $SYNDICATE_TOOL -c "$syndicate_conf" update_gateway name=$test_ag caps=ALL port=31112 driver=$ag_driver

- name: setup UGs
  type: sequential
  tasks:
    - name: create read UG config
      command: $SYNDICATE_TOOL -c "$syndicate_conf" create_gateway name=$read_ug type=UG volume=$test_volume email=$SYNDICATE_ADMIN private_key=auto port=31111

    - name: update read UG config
      command: $SYNDICATE_TOOL -c "$syndicate_conf" update_gateway name=$read_ug caps=ALL

- name: daemon AG
  type: daemon
  tasks:
    - name: start AG
      command: $ag_path -c "$syndicate_conf" -d2 -f -u $SYNDICATE_ADMIN -v $test_volume -g $test_ag
      sleep: 20
      exit: 0

- name: read tests
  type: sequential
  loop_on: test_ranges
  tasks:
    - name: test read
      loop_on: cacheloop #nested loop, cache first iteration
      command: $read_path -d2 -f -c "$syndicate_conf" -u $SYNDICATE_ADMIN -v $test_volume -g $read_ug /local_file $test_ranges.start $test_ranges.stop
      rangecheckout: $local_file $test_ranges.start $test_ranges.stop
